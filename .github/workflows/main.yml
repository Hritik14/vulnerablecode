name: CI
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  unit_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Install dependencies
        run: |
          sudo apt install  python3-dev postgresql libpq-dev build-essential libxml2-dev libxslt1-dev postgresql ncat
          python -m pip install --upgrade pip 

      - name: Initialize venv
        run: python -m venv .venv && \
          . .venv/bin/activate && \
          pip install -r requirements.txt
    
      - name: Setup database
        env:
          PGPASSWORD: vulnerablecode
        run: |
          sudo systemctl start postgresql
          sudo -Eu postgres psql -c "CREATE ROLE vulnerablecode WITH PASSWORD '$PGPASSWORD' NOSUPERUSER CREATEDB NOCREATEROLE INHERIT LOGIN;"
          sudo systemctl status postgresql
          createdb --encoding=utf-8 --owner=vulnerablecode  --user=vulnerablecode \
          --host=localhost --port=5432 vulnerablecode

      - name: Run tests
        run: . .venv/bin/activate && \
          python -m pytest -v -m "not webtest"
        env:
          DJANGO_DEV: 1
          GH_TOKEN: 1 
